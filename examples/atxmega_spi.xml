<?xml version="1.0" encoding="UTF-8"?>
<!--Generated by PeakRDL IP-XACT (https://github.com/SystemRDL/PeakRDL-ipxact)-->
<ipxact:component xmlns:ipxact="http://www.accellera.org/XMLSchema/IPXACT/1685-2014" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.accellera.org/XMLSchema/IPXACT/1685-2014 http://www.accellera.org/XMLSchema/IPXACT/1685-2014/index.xsd">
  <ipxact:vendor>example.org</ipxact:vendor>
  <ipxact:library>mylibrary</ipxact:library>
  <ipxact:name>atxmega_spi</ipxact:name>
  <ipxact:version>1.0</ipxact:version>
  <ipxact:memoryMaps>
    <ipxact:memoryMap>
      <ipxact:name>atxmega_spi_mmap</ipxact:name>
      <ipxact:addressBlock>
        <ipxact:name>atxmega_spi</ipxact:name>
        <ipxact:displayName>ATXMEGA SPI controller</ipxact:displayName>
        <ipxact:description>Register description of Atmel XMEGA AU's SPI controller
Transcribed from original manual as an example exercise:
http://ww1.microchip.com/downloads/en/DeviceDoc/Atmel-8331-8-and-16-bit-AVR-Microcontroller-XMEGA-AU_Manual.pdf</ipxact:description>
        <ipxact:baseAddress>'h0</ipxact:baseAddress>
        <ipxact:range>'h4</ipxact:range>
        <ipxact:width>8</ipxact:width>
        <ipxact:register>
          <ipxact:name>CTRL</ipxact:name>
          <ipxact:displayName>Control Register</ipxact:displayName>
          <ipxact:addressOffset>'h0</ipxact:addressOffset>
          <ipxact:size>8</ipxact:size>
          <ipxact:field>
            <ipxact:name>PRESCALER</ipxact:name>
            <ipxact:description>Controls the SPI clock rate when configured in master mode</ipxact:description>
            <ipxact:bitOffset>0</ipxact:bitOffset>
            <ipxact:resets>
              <ipxact:reset>
                <ipxact:value>'h0</ipxact:value>
              </ipxact:reset>
            </ipxact:resets>
            <ipxact:bitWidth>2</ipxact:bitWidth>
            <ipxact:access>read-write</ipxact:access>
          </ipxact:field>
          <ipxact:field>
            <ipxact:name>MODE</ipxact:name>
            <ipxact:description>These bits select the transfer mode</ipxact:description>
            <ipxact:bitOffset>2</ipxact:bitOffset>
            <ipxact:resets>
              <ipxact:reset>
                <ipxact:value>'h0</ipxact:value>
              </ipxact:reset>
            </ipxact:resets>
            <ipxact:bitWidth>2</ipxact:bitWidth>
            <ipxact:access>read-write</ipxact:access>
          </ipxact:field>
          <ipxact:field>
            <ipxact:name>MASTER</ipxact:name>
            <ipxact:description>Selects master mode when written to one, and slave mode when
written to zero. If SS is configured as an input and driven low while
master mode is set, master mode will be cleared</ipxact:description>
            <ipxact:bitOffset>4</ipxact:bitOffset>
            <ipxact:resets>
              <ipxact:reset>
                <ipxact:value>'h0</ipxact:value>
              </ipxact:reset>
            </ipxact:resets>
            <ipxact:bitWidth>1</ipxact:bitWidth>
            <ipxact:volatile>true</ipxact:volatile>
            <ipxact:access>read-write</ipxact:access>
          </ipxact:field>
          <ipxact:field>
            <ipxact:name>DORD</ipxact:name>
            <ipxact:description>DORD decides the data order when a byte is shifted out from
the DATA register. When DORD is written to one, the least-significant
bit (lsb) of the data byte is transmitted first, and when DORD is
written to zero, the most-significant bit (msb) of the data byte is
transmitted first</ipxact:description>
            <ipxact:bitOffset>5</ipxact:bitOffset>
            <ipxact:resets>
              <ipxact:reset>
                <ipxact:value>'h0</ipxact:value>
              </ipxact:reset>
            </ipxact:resets>
            <ipxact:bitWidth>1</ipxact:bitWidth>
            <ipxact:access>read-write</ipxact:access>
          </ipxact:field>
          <ipxact:field>
            <ipxact:name>ENABLE</ipxact:name>
            <ipxact:description>Setting this bit enables the SPI module. This bit must be
set to enable any SPI operations</ipxact:description>
            <ipxact:bitOffset>6</ipxact:bitOffset>
            <ipxact:resets>
              <ipxact:reset>
                <ipxact:value>'h0</ipxact:value>
              </ipxact:reset>
            </ipxact:resets>
            <ipxact:bitWidth>1</ipxact:bitWidth>
            <ipxact:access>read-write</ipxact:access>
          </ipxact:field>
          <ipxact:field>
            <ipxact:name>CLK2X</ipxact:name>
            <ipxact:description>When this bit is set, the SPI speed (SCK frequency) will be
doubled in master mode</ipxact:description>
            <ipxact:bitOffset>7</ipxact:bitOffset>
            <ipxact:resets>
              <ipxact:reset>
                <ipxact:value>'h0</ipxact:value>
              </ipxact:reset>
            </ipxact:resets>
            <ipxact:bitWidth>1</ipxact:bitWidth>
            <ipxact:access>read-write</ipxact:access>
          </ipxact:field>
        </ipxact:register>
        <ipxact:register>
          <ipxact:name>INTCTRL</ipxact:name>
          <ipxact:displayName>Interrupt Control</ipxact:displayName>
          <ipxact:addressOffset>'h1</ipxact:addressOffset>
          <ipxact:size>8</ipxact:size>
          <ipxact:field>
            <ipxact:name>INTLVL</ipxact:name>
            <ipxact:description>These bits enable the SPI interrupt and select the interrupt level</ipxact:description>
            <ipxact:bitOffset>0</ipxact:bitOffset>
            <ipxact:resets>
              <ipxact:reset>
                <ipxact:value>'h0</ipxact:value>
              </ipxact:reset>
            </ipxact:resets>
            <ipxact:bitWidth>2</ipxact:bitWidth>
            <ipxact:access>read-write</ipxact:access>
          </ipxact:field>
        </ipxact:register>
        <ipxact:register>
          <ipxact:name>STATUS</ipxact:name>
          <ipxact:addressOffset>'h2</ipxact:addressOffset>
          <ipxact:size>8</ipxact:size>
          <ipxact:field>
            <ipxact:name>WRCOL</ipxact:name>
            <ipxact:bitOffset>6</ipxact:bitOffset>
            <ipxact:resets>
              <ipxact:reset>
                <ipxact:value>'h0</ipxact:value>
              </ipxact:reset>
            </ipxact:resets>
            <ipxact:bitWidth>1</ipxact:bitWidth>
            <ipxact:volatile>true</ipxact:volatile>
            <ipxact:access>read-only</ipxact:access>
          </ipxact:field>
          <ipxact:field>
            <ipxact:name>IF</ipxact:name>
            <ipxact:bitOffset>7</ipxact:bitOffset>
            <ipxact:resets>
              <ipxact:reset>
                <ipxact:value>'h0</ipxact:value>
              </ipxact:reset>
            </ipxact:resets>
            <ipxact:bitWidth>1</ipxact:bitWidth>
            <ipxact:volatile>true</ipxact:volatile>
            <ipxact:access>read-only</ipxact:access>
          </ipxact:field>
        </ipxact:register>
        <ipxact:register>
          <ipxact:name>DATA</ipxact:name>
          <ipxact:description>The DATA register is used for sending and receiving data.
Writing to the register initiates the data transmission, and the byte
written to the register will be shifted out on the SPI output line.
Reading the register causes the shift register receive buffer to be read,
returning the last byte successfully received</ipxact:description>
          <ipxact:addressOffset>'h3</ipxact:addressOffset>
          <ipxact:size>8</ipxact:size>
          <ipxact:field>
            <ipxact:name>WDATA</ipxact:name>
            <ipxact:bitOffset>0</ipxact:bitOffset>
            <ipxact:bitWidth>8</ipxact:bitWidth>
            <ipxact:access>write-only</ipxact:access>
          </ipxact:field>
          <ipxact:field>
            <ipxact:name>RDATA</ipxact:name>
            <ipxact:bitOffset>0</ipxact:bitOffset>
            <ipxact:bitWidth>8</ipxact:bitWidth>
            <ipxact:volatile>true</ipxact:volatile>
            <ipxact:access>read-only</ipxact:access>
          </ipxact:field>
        </ipxact:register>
      </ipxact:addressBlock>
    </ipxact:memoryMap>
  </ipxact:memoryMaps>
</ipxact:component>
