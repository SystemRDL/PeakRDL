name: build

on:
  push:
    branches:
      - main
      - 'dev/**'
  pull_request:
    branches: [ main ]
  release:
    types:
      - published

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install build

      - name: Build
        run: |
          python -m build peakrdl-cli -o dist/
          python -m build peakrdl -o dist/

      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            dist/*.tar.gz
            dist/*.whl
#-------------------------------------------------------------------------------
  test:
    needs:
      - build
    strategy:
      matrix:
        python-version:
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
        include:
          - os: ubuntu-latest

          # older versions need older OS
          - python-version: 3.6
            os: ubuntu-20.04

          - python-version: "3.7"
            os: ubuntu-22.04

          - python-version: "3.8"
            os: ubuntu-22.04

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Install dependencies
        run: |
          python -m pip install -r test/requirements.txt

      - name: Install
        run: |
          python -m pip install dist/peakrdl_cli-*.whl
          python -m pip install dist/peakrdl-*.whl

      - name: Test
        run: |
          cd test
          pytest --cov=peakrdl

      - name: Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_PARALLEL: true
        run: |
          cd test
          coveralls --service=github

  finish_coveralls:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_PARALLEL: true
        run: |
          python -m pip install -U coveralls>=3.0.0
          coveralls --service=github --finish

#-------------------------------------------------------------------------------
  lint:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Install dependencies
        run: |
          python -m pip install -r test/requirements.txt

      - name: Install
        run: |
          python -m pip install dist/peakrdl_cli-*.whl

      - name: Run Lint
        run: |
          pylint --rcfile test/pylint.rc peakrdl-cli/src/peakrdl

#-------------------------------------------------------------------------------
  mypy:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Install dependencies
        run: |
          python -m pip install -r test/requirements.txt

      - name: Install
        run: |
          python -m pip install dist/peakrdl_cli-*.whl

      - name: Type Check
        run: |
          mypy --config-file test/mypy.ini peakrdl-cli/src/peakrdl

#-------------------------------------------------------------------------------
  deploy:
    needs:
      - test
      - lint
      - mypy

    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write

    # Only publish when a GitHub Release is created.
    if: github.event_name == 'release'
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
